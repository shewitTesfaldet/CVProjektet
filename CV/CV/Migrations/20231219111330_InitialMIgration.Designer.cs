// <auto-generated />
using System;
using CV.Models.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CV.Migrations
{
    [DbContext(typeof(UserContext))]
    [Migration("20231219111330_InitialMIgration")]
    partial class InitialMIgration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CV.Models.CV_", b =>
                {
                    b.Property<int>("CID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CID"));

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CID");

                    b.ToTable("CV_s");
                });

            modelBuilder.Entity("CV.Models.CV_Competence", b =>
                {
                    b.Property<int>("CID")
                        .HasColumnType("int");

                    b.Property<int>("CompID")
                        .HasColumnType("int");

                    b.HasKey("CID", "CompID");

                    b.HasIndex("CompID");

                    b.ToTable("CV_Competences");
                });

            modelBuilder.Entity("CV.Models.CV_Education", b =>
                {
                    b.Property<int>("CID")
                        .HasColumnType("int");

                    b.Property<int>("EID")
                        .HasColumnType("int");

                    b.HasKey("CID", "EID");

                    b.HasIndex("EID");

                    b.ToTable("CV_Educations");
                });

            modelBuilder.Entity("CV.Models.Chat", b =>
                {
                    b.Property<int>("MID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MID"));

                    b.Property<int>("AID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Read")
                        .HasColumnType("bit");

                    b.Property<string>("Text")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("MID");

                    b.HasIndex("AID");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("CV.Models.Competence", b =>
                {
                    b.Property<int>("CompID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompID"));

                    b.Property<int>("CID")
                        .HasColumnType("int");

                    b.Property<int?>("CV_CID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompID");

                    b.HasIndex("CV_CID");

                    b.ToTable("Competence");
                });

            modelBuilder.Entity("CV.Models.Education", b =>
                {
                    b.Property<int>("EdID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EdID"));

                    b.Property<DateTime>("BeginDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CV_CID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.HasKey("EdID");

                    b.HasIndex("CV_CID");

                    b.ToTable("Education");
                });

            modelBuilder.Entity("CV.Models.Experience", b =>
                {
                    b.Property<int>("EID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EID"));

                    b.Property<int>("CID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EID");

                    b.HasIndex("CID");

                    b.ToTable("Experience");
                });

            modelBuilder.Entity("CV.Models.Project", b =>
                {
                    b.Property<int>("PID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PID"));

                    b.Property<DateTime>("BeginDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PID");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("CV.Models.User", b =>
                {
                    b.Property<int>("UID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UID"));

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CID")
                        .HasColumnType("int");

                    b.Property<string>("ConfirmPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Epost")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Privat")
                        .HasColumnType("bit");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("UID");

                    b.HasIndex("CID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CV.Models.User_Project", b =>
                {
                    b.Property<int>("PID")
                        .HasColumnType("int");

                    b.Property<int>("UID")
                        .HasColumnType("int");

                    b.HasKey("PID", "UID");

                    b.HasIndex("UID");

                    b.ToTable("UserProjects");
                });

            modelBuilder.Entity("CV.Models.CV_Competence", b =>
                {
                    b.HasOne("CV.Models.CV_", "CV")
                        .WithMany()
                        .HasForeignKey("CID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CV.Models.Competence", "Competence")
                        .WithMany()
                        .HasForeignKey("CompID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CV");

                    b.Navigation("Competence");
                });

            modelBuilder.Entity("CV.Models.CV_Education", b =>
                {
                    b.HasOne("CV.Models.CV_", "CV")
                        .WithMany()
                        .HasForeignKey("CID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CV.Models.Education", "Education")
                        .WithMany()
                        .HasForeignKey("EID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CV");

                    b.Navigation("Education");
                });

            modelBuilder.Entity("CV.Models.Chat", b =>
                {
                    b.HasOne("CV.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("AID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("CV.Models.Competence", b =>
                {
                    b.HasOne("CV.Models.CV_", null)
                        .WithMany("Competence")
                        .HasForeignKey("CV_CID");
                });

            modelBuilder.Entity("CV.Models.Education", b =>
                {
                    b.HasOne("CV.Models.CV_", null)
                        .WithMany("Education")
                        .HasForeignKey("CV_CID");
                });

            modelBuilder.Entity("CV.Models.Experience", b =>
                {
                    b.HasOne("CV.Models.CV_", "cv")
                        .WithMany("Experience")
                        .HasForeignKey("CID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cv");
                });

            modelBuilder.Entity("CV.Models.User", b =>
                {
                    b.HasOne("CV.Models.CV_", "Cv")
                        .WithMany()
                        .HasForeignKey("CID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cv");
                });

            modelBuilder.Entity("CV.Models.User_Project", b =>
                {
                    b.HasOne("CV.Models.Project", "project")
                        .WithMany()
                        .HasForeignKey("PID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CV.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("UID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("project");

                    b.Navigation("user");
                });

            modelBuilder.Entity("CV.Models.CV_", b =>
                {
                    b.Navigation("Competence");

                    b.Navigation("Education");

                    b.Navigation("Experience");
                });
#pragma warning restore 612, 618
        }
    }
}
